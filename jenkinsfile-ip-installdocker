pipeline {
  agent any

  environment {
    SSH_USER     = "boho"                             // SSH user ของ Ansible VM
    ANSIBLE_HOST = "4.145.84.26"                      // IP ของ Ansible VM
    PROJECT_DIR  = "ansible-ssh-test"                 // Git repo directory
    GIT_BRANCH   = "dev"
    GIT_REPO     = "https://github.com/kitsanaphon1/ansible-ssh-test.git"
  }

  stages {
    stage('📥 Clone Project on Ansible VM') {
      steps {
        sshagent(['ssh-ansible-agent']) {
          sh """
            ssh -o StrictHostKeyChecking=no ${SSH_USER}@${ANSIBLE_HOST} <<EOF
              if [ ! -d "${PROJECT_DIR}" ]; then
                git clone ${GIT_REPO}
              fi
              cd ${PROJECT_DIR}
              git fetch origin
              git checkout -B ${GIT_BRANCH} origin/${GIT_BRANCH}
              git pull origin ${GIT_BRANCH}
EOF
          """
        }
      }
    }

    stage('📡 Run get-ip.yaml to fetch public IP') {
      steps {
        withCredentials([
          string(credentialsId: 'AZURE_CLIENT_ID',       variable: 'AZURE_CLIENT_ID'),
          string(credentialsId: 'AZURE_SECRET',          variable: 'AZURE_SECRET'),
          string(credentialsId: 'AZURE_TENANT',          variable: 'AZURE_TENANT'),
          string(credentialsId: 'AZURE_SUBSCRIPTION_ID', variable: 'AZURE_SUBSCRIPTION_ID')
        ]) {
          sshagent(['ssh-ansible-agent']) {
            sh """
              ssh -o StrictHostKeyChecking=no ${SSH_USER}@${ANSIBLE_HOST} <<EOF
                source ~/ansible-env/bin/activate
                export AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
                export AZURE_SECRET=${AZURE_SECRET}
                export AZURE_TENANT=${AZURE_TENANT}
                export AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
                cd ${PROJECT_DIR}/playbooks
                ansible-playbook get-ip.yaml -e "@../config/config-dev.yaml"
EOF
            """
          }
        }
      }
    }

    stage('📖 Read Target IP and SSH User') {
      steps {
        sshagent(['ssh-ansible-agent']) {
          script {
            def ip = sh(
              script: "ssh -o StrictHostKeyChecking=no ${SSH_USER}@${ANSIBLE_HOST} 'cat ~/ip.txt'",
              returnStdout: true
            ).trim()

            def vmUser = sh(
              script: "ssh -o StrictHostKeyChecking=no ${SSH_USER}@${ANSIBLE_HOST} \"grep admin_username ${PROJECT_DIR}/config/config-dev.yaml | cut -d ':' -f2 | tr -d ' '\"",
              returnStdout: true
            ).trim()

            echo "📍 Target VM IP: ${ip}"
            echo "👤 SSH User: ${vmUser}"

            env.TARGET_VM_IP = ip
            env.TARGET_VM_USER = vmUser
          }
        }
      }
    }

    stage('🐳 Install Docker on Target VM') {
      steps {
        sshagent(['ssh-ansible-agent']) {
          sh """
            ssh -o StrictHostKeyChecking=no ${SSH_USER}@${ANSIBLE_HOST} <<EOF
              source ~/ansible-env/bin/activate
              cd ${PROJECT_DIR}/playbooks
              ANSIBLE_HOST_KEY_CHECKING=False \\
              ansible-playbook install-docker.yaml -i "${env.TARGET_VM_IP}," --user=${env.TARGET_VM_USER}
EOF
          """
        }
      }
    }
  }
}
